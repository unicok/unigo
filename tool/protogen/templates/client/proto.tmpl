// Code generated by gen_proto.sh.
// DO NOT EDIT!
using UnityEngine;
using System;
using System.Collections.Generic;

namespace NetProto.Proto
{
    public abstract class NetBase
    {
        public short NetMsgId;
        public abstract void Pack(ByteArray w);
    }
{{range .Infos}}
    public class {{.Name}} : NetBase
    {
        {{- range $f := .Fields}}
        {{- with Type $f.Typ}}
        public {{.}}{{if $f.Array}}[]{{end}} {{$f.Name}};
        {{- else}}
        public {{$f.Typ}}{{if $f.Array}}[]{{end}} {{$f.Name}};
        {{- end}}
        {{- end}}

        public override void Pack(ByteArray w)
        {
            {{- range $f := .Fields}}
            {{- if $f.Array}}
            w.{{Write "uint16"}}(({{Type "uint16"}})this.{{$f.Name}}.Length);
            for (int k = 0; k < this.{{$f.Name}}.Length; k++)
            {
            {{- end}}
            {{- with Write $f.Typ}}
            {{if $f.Array}}    {{end}}w.{{.}}(this.{{$f.Name}}{{if $f.Array}}[k]{{end}});
            {{- else}}
            {{if $f.Array}}    {{end}}this.{{$f.Name}}{{if $f.Array}}[k]{{end}}.Pack(w);
            {{- end}}
            {{- if $f.Array}}
            }
            {{- end}}
            {{- end}}
        }

        public static {{.Name}} UnPack(ByteArray reader)
        {
            {{.Name}} tbl = new {{.Name}}();{{range $f := .Fields}}
            {{- if $f.Array}}
            {
                {{Type "uint16"}} narr = reader.{{Read "uint16"}}();
                {{- with Read $f.Typ}}
                tbl.{{$f.Name}} = new {{Type $f.Typ}}[narr];
                for (int i = 0; i < narr; i++)
                {
                    tbl.{{$f.Name}}[i] = reader.{{.}}();
                }
                {{- else}}
                tbl.{{$f.Name}} = new {{$f.Typ}}[narr];
                for (int i = 0; i < narr; i++)
                {
                    tbl.{{$f.Name}}[i] = {{$f.Typ}}.UnPack(reader);
                }
                {{- end}}
            }
            {{- else}}
            {{- with Read $f.Typ}}
            tbl.{{$f.Name}} = reader.{{.}}();
            {{- else}}
            tbl.{{$f.Name}} = {{$f.Typ}}.UnPack(reader);
            {{- end}}
            {{- end}}
            {{- end}}

            return tbl;
        }
    }
{{end -}}
}